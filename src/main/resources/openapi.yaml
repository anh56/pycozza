openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is API for pizza ordering app for Pyco
  contact:
    email: 01ntanh9a3@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/anh56/pycozza/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://ec2-54-169-109-32.ap-southeast-1.compute.amazonaws.com:8080/pycozza/
tags:
- name: product
- name: category
- name: user
- name: order
paths:
  /product:
    get:
      tags:
      - product
      summary: get product w pagination
      operationId: getProductWithPagination
      parameters:
      - name: page
        in: query
        description: number of page to look for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
          default: 5
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        "400":
          description: bad input parameter
    post:
      summary: adds a product
      description: Adds an item to the system
      operationId: addProduct
      requestBody:
        description: Create product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        "201":
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCreationSuccessResponse'
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
  /product/all:
    get:
      tags:
      - product
      summary: get all products
      operationId: getAllProduct
      responses:
        "200":
          description: all producs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        "400":
          description: bad input parameter
  /product/{categoryId}:
    get:
      tags:
      - product
      summary: get all products by category
      operationId: getProductByCategoryId
      parameters:
      - name: categoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: all products belong to a category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        "400":
          description: bad input parameter
  /category:
    get:
      tags:
      - category
      summary: get category
      operationId: getCategory
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
        "400":
          description: bad input parameter
  /category/id:
    get:
      tags:
      - category
      summary: get category by id
      operationId: getCategoryById
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
        "400":
          description: bad input parameter
  /user:
    get:
      tags:
      - user
      summary: get user
      operationId: getUser
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        "400":
          description: bad input parameter
    post:
      summary: adds a user
      description: Adds a user to the system
      operationId: addUser
      requestBody:
        description: Create user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        "201":
          description: user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCreationSuccessResponse'
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
  /order:
    get:
      tags:
      - order
      summary: get order
      operationId: getOrder
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderListResponse'
        "400":
          description: bad input parameter
    post:
      summary: adds an order
      description: Adds an order to the system
      operationId: addOrder
      requestBody:
        description: add an order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        "201":
          description: user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCreationSuccessResponse'
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
components:
  schemas:
    UserListResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/UserResponseModel'
    UserResponseModel:
      required:
      - address
      - email
      - id
      - name
      - phone
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Example Category
        email:
          type: string
        address:
          type: string
        phone:
          type: string
    CategoryListResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryResponseModel'
    CategoryResponseModel:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Example Category
    ProductListResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponseModel'
    ProductResponseModel:
      required:
      - categoryId
      - imgLink
      - name
      - price
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: Example Pizza
        categoryId:
          type: integer
        imgLink:
          type: string
        price:
          type: integer
        maxPrice:
          type: integer
        description:
          type: string
    OrderListResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponseModel'
    OrderResponseModel:
      required:
      - createDate
      - name
      - productId
      - quantity
      - total
      - userId
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Example order
        createDate:
          type: string
          format: date-time
        productId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
        total:
          type: integer
          example: 29
        userId:
          type: integer
          example: 1
    CreateOrderRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        productId:
          type: integer
        quantity:
          type: integer
        total:
          type: integer
        userId:
          type: integer
    CreateProductRequest:
      type: object
      properties:
        name:
          type: string
          example: Example Pizza
        categoryId:
          type: integer
        imgLink:
          type: string
        price:
          type: integer
        maxPrice:
          type: integer
        description:
          type: string
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
          format: password
    ObjectCreationSuccessResponse:
      type: object
      properties:
        id:
          type: string
        responseCode:
          type: integer
    ApiError:
      type: object
      properties:
        faults:
          type: array
          items:
            $ref: '#/components/schemas/Fault'
        responseCode:
          type: integer
    Fault:
      type: object
      properties:
        internalMessage:
          type: string
        code:
          type: integer
        userMessage:
          type: string
